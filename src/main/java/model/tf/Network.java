package model.tf;

import java.util.ArrayList;
import java.util.List;
import model.Individual;
import util.IndividualUtil;
import util.random.Random;
import util.random.UniformRandom;

/**
 * Created by adam on 22/02/16.
 */
public class Network implements TestFunction {

    private int nodeCount = 20;
    private int[][] path;
    private double[][] pathCreate;
    private double[][] pathCost;
    
    private int[] X;
    private int start;
    private double cost = 1;
    private double load_cost = 0;
    private List<Integer> node_path;
    private List<Integer[]> built_path;
    
    @Override
    public double fitness(Individual individual) {
        return fitness(individual.vector);
    }

    @Override
    public double fitness(double[] vector) {
        //10 nodes
//        path = new int[][]{{-1, -1, 1, -1, 0, 1, -1, 1, -1, 1}, {-1, -1, -1, 1, -1, 1, 1, 1, 1, -1}, {1, -1, -1, -1, 0, 0, 0, -1, 1, 1}, {-1, 1, -1, -1, 1, 0, 0, -1, 0, 0}, {0, -1, 0, 1, -1, 0, 1, -1, -1, 1}, {1, 1, 0, 0, 0, -1, -1, -1, -1, 1}, {-1, 1, 0, 0, 1, -1, -1, 1, 0, 0}, {1, 1, -1, -1, -1, -1, 1, -1, -1, 1}, {-1, 1, 1, 0, -1, -1, 0, -1, -1, -1}, {1, -1, 1, 0, 1, 1, 0, 1, -1, -1}};
//        pathCreate = new double[][]{{0, 0, 0, 0, 780.066, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 648.627, 621.468, 171.548, 0, 0, 0}, {0, 0, 0, 0, 0, 557.84, 961.865, 0, 558.666, 155.177}, {268.695, 0, 682.023, 0, 0, 982.653, 0, 0, 0, 0}, {0, 0, 894.168, 428.068, 386.546, 0, 0, 0, 0, 0}, {0, 0, 283.43, 603.023, 0, 0, 0, 0, 348.327, 274.088}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 574.617, 0, 0, 221.48, 0, 0, 0}, {0, 0, 0, 576.021, 0, 0, 744.893, 0, 0, 0}};
//        pathCost = new double[][]{{0, 0, 41.753, 0, 22.0582, 15.0906, 0, 5.26332, 0, 40.2195}, {0, 0, 0, 33.4163, 0, 32.1659, 24.904, 20.6684, 27.1115, 0}, {45.0325, 0, 0, 0, 11.1582, 45.7445, 9.57719, 0, 8.38121, 16.308}, {0, 26.1401, 0, 0, 16.0062, 39.0334, 21.0028, 0, 41.4784, 7.78682}, {33.373, 0, 49.3621, 29.1261, 0, 14.6122, 45.5335, 0, 0, 31.8308}, {30.458, 18.9177, 42.2748, 18.4217, 38.8728, 0, 0, 0, 0, 25.5107}, {0, 45.7977, 5.93898, 48.3719, 27.7501, 0, 0, 28.6091, 40.4143, 10.3606}, {27.1116, 18.0205, 0, 0, 0, 0, 17.8674, 0, 0, 40.7576}, {0, 5.5384, 35.5583, 27.7005, 0, 0, 21.5055, 0, 0, 0}, {29.8469, 0, 9.37498, 38.2899, 13.7801, 22.6186, 41.2695, 20.5743, 0, 0}};
//
//        X = new int[]{-51, 17, 38, 36, 10, 25, -45, 26, 8, 38};
//        start = 0;

        //40 nodes
//        nodeCount = 40;
//        path = new int[][]{
//        {-1, -1, 0, 0, -1, 1, 1, 1, -1, 0, 0, 1, 0, 0, -1, 1, 1, 1, -1, 0, 1, 1, 0, -1, 1, 1, 0, -1, 0, 1, 1, 0, -1, 1, 0, 1, -1, 1, -1, 0},
//        {-1, -1, -1, -1, -1, -1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, -1, 1, 1, 0, 1, 1, -1, -1, -1, -1, -1, 1, -1, 1, 0, 0},
//        {0, -1, -1, 0, 1, 1, 0, -1, 1, -1, 1, -1, 1, 0, 1, 1, 0, 1, 1, -1, 0, -1, -1, -1, 1, 1, 0, 0, 1, 1, -1, 0, 1, 0, 0, 0, 1, 1, 1, -1},
//        {0, -1, 0, -1, 1, 0, 1, -1, -1, -1, -1, 0, 1, -1, -1, -1, -1, 0, 0, 1, 1, -1, 1, -1, 0, 0, -1, 1, 0, 0, 0, -1, 0, 0, 1, 0, 0, -1, 0, 1},
//        {-1, -1, 1, 1, -1, 0, 0, -1, -1, 0, 0, 1, 1, -1, -1, -1, -1, 0, 1, -1, 0, -1, 0, 1, -1, 1, -1, 0, 0, 1, 0, 1, -1, -1, 0, -1, -1, 1, 0, 0},
//        {1, -1, 1, 0, 0, -1, -1, 1, 1, 0, 1, 0, 1, -1, 1, 1, 0, -1, -1, 1, -1, 1, 1, -1, -1, 0, 0, 1, -1, 0, -1, 1, 0, 0, -1, 0, -1, -1, 0, 1},
//        {1, 0, 0, 1, 0, -1, -1, 0, -1, -1, -1, 1, 0, -1, -1, 1, 1, 0, -1, -1, 0, 1, -1, -1, -1, -1, 1, -1, 1, 0, 1, 1, 1, 0, 0, 1, -1, -1, 0, 0},
//        {1, 0, -1, -1, -1, 1, 0, -1, -1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, 1, 0, 1, 1, 1, -1, -1, 0, 1, 1, 0, 1, 0, 0, 0, -1, 1, -1, -1, -1, 0},
//        {-1, 0, 1, -1, -1, 1, -1, -1, -1, 0, -1, 0, -1, 0, 1, -1, 0, 0, -1, 1, 1, -1, 1, -1, 1, 1, 0, 0, -1, 0, 0, -1, 1, 1, 1, 0, 0, 0, 1, 0},
//        {0, 1, -1, -1, 0, 0, -1, 1, 0, -1, 1, 1, 1, 0, 0, 1, 0, -1, 0, 0, 0, 1, -1, -1, 0, 1, 0, 1, 0, -1, 1, 1, -1, -1, 1, 1, 0, 0, 1, 0},
//        {0, 0, 1, -1, 0, 1, -1, 1, -1, 1, -1, 1, 1, 0, -1, 1, 1, -1, 1, -1, 1, 0, 1, 0, 1, 0, 1, -1, -1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, -1},
//        {1, 1, -1, 0, 1, 0, 1, 1, 0, 1, 1, -1, 0, -1, 0, 1, 0, 0, -1, 0, 1, 1, 1, 1, -1, 1, 1, 1, 0, 1, 1, -1, 0, -1, -1, -1, -1, -1, 1, -1},
//        {0, 1, 1, 1, 1, 1, 0, 1, -1, 1, 1, 0, -1, 0, 1, 0, 0, -1, 0, 0, -1, 1, 0, 1, 1, 0, 0, -1, 0, 1, -1, 1, 1, 0, -1, -1, 0, -1, -1, 1},
//        {0, 1, 0, -1, -1, -1, -1, 1, 0, 0, 0, -1, 0, -1, 1, 1, 1, -1, 1, -1, -1, -1, 0, 1, -1, 0, 1, -1, -1, 1, 0, 1, 0, 0, 0, 0, 0, 0, -1, 1},
//        {-1, 1, 1, -1, -1, 1, -1, -1, 1, 0, -1, 0, 1, 1, -1, 0, -1, 0, 1, 1, 0, 0, -1, 0, -1, -1, 1, 1, 0, 0, 0, 1, 0, 1, 1, -1, 1, 0, 1, 0},
//        {1, 0, 1, -1, -1, 1, 1, -1, -1, 1, 1, 1, 0, 1, 0, -1, 1, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 1, -1, 0, 1, -1, 1, 0, -1, 1, 0},
//        {1, 0, 0, -1, -1, 0, 1, -1, 0, 0, 1, 0, 0, 1, -1, 1, -1, 1, 0, 0, 1, -1, 0, -1, 0, -1, 0, -1, -1, -1, 1, 1, 1, -1, 0, 1, 0, 0, -1, 1},
//        {1, 0, 1, 0, 0, -1, 0, -1, 0, -1, -1, 0, -1, -1, 0, 1, 1, -1, 0, 0, -1, -1, 1, -1, -1, 1, -1, 0, 0, -1, -1, -1, 0, 0, 0, -1, -1, 1, -1, 0},
//        {-1, 1, 1, 0, 1, -1, -1, -1, -1, 0, 1, -1, 0, 1, 1, 0, 0, 0, -1, 0, -1, -1, 1, 0, -1, 1, -1, -1, -1, -1, 1, 0, -1, 1, 0, 1, 0, -1, -1, 1},
//        {0, 0, -1, 1, -1, 1, -1, 1, 1, 0, -1, 0, 0, -1, 1, 0, 0, 0, 0, -1, 0, 1, -1, 1, -1, 0, 0, 0, -1, 0, -1, 1, 1, 0, 0, 1, 0, 0, 0, 1},
//        {1, 0, 0, 1, 0, -1, 0, 0, 1, 0, 1, 1, -1, -1, 0, 0, 1, -1, -1, 0, -1, 1, 0, -1, -1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, -1, -1, -1, -1},
//        {1, 0, -1, -1, -1, 1, 1, 1, -1, 1, 0, 1, 1, -1, 0, 0, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, 0, -1, 1, 1, 1, 1, -1, 0, -1, 0, 0, 0, -1, 0},
//        {0, 0, -1, 1, 0, 1, -1, 1, 1, -1, 1, 1, 0, 0, -1, 0, 0, 1, 1, -1, 0, -1, -1, 0, 1, 1, -1, 1, 1, -1, 1, 0, 1, 1, 0, 1, 0, 1, -1, -1},
//        {-1, 0, -1, -1, 1, -1, -1, 1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1, -1, 1, 0, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, 0, -1, 1, 1, 0},
//        {1, -1, 1, 0, -1, -1, -1, -1, 1, 0, 1, -1, 1, -1, -1, 0, 0, -1, -1, -1, -1, -1, 1, -1, -1, -1, 0, -1, 1, -1, -1, -1, 1, 0, 1, 1, 1, 1, 0, 1},
//        {1, 1, 1, 0, 1, 0, -1, -1, 1, 1, 0, 1, 0, 0, -1, 0, -1, 1, 1, 0, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, 0, 1, -1, -1, 1, 1, 0, -1, 1, 1},
//        {0, 1, 0, -1, -1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, -1, -1, 0, 1, 0, -1, -1, 0, 1, -1, -1, 0, 0, -1, -1, 1, 0, 0, -1, 0, 0, 1, 1},
//        {-1, 0, 0, 1, 0, 1, -1, 1, 0, 1, -1, 1, -1, -1, 1, -1, -1, 0, -1, 0, 0, -1, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1, 1, 1, 0, 1, 0, -1, -1, 1},
//        {0, 1, 1, 0, 0, -1, 1, 1, -1, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, -1, 0, 1, 1, -1, 1, 1, 0, 1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1},
//        {1, 1, 1, 0, 1, 0, 0, 0, 0, -1, 1, 1, 1, 1, 0, 0, -1, -1, -1, 0, 0, 1, -1, 1, -1, 1, 0, -1, -1, -1, -1, 0, 0, 0, -1, 1, 1, -1, 1, 1},
//        {1, -1, -1, 0, 0, -1, 1, 1, 0, 1, 0, 1, -1, 0, 0, 1, 1, -1, 1, -1, 1, 1, 1, -1, -1, 0, -1, -1, 1, -1, -1, 1, 1, 0, -1, 1, 0, 0, 0, 0},
//        {0, -1, 0, -1, 1, 1, 1, 0, -1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 0, 1, 1, 1, 0, 1, -1, 1, -1, -1, 1, 0, 1, -1, -1, 1, 0, 0, -1, -1, 1, 1},
//        {-1, -1, 1, 0, -1, 0, 1, 0, 1, -1, 0, 0, 1, 0, 0, 0, 1, 0, -1, 1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 0, 1, -1, -1, 1, 1, 0, 1, 1, -1, 1},
//        {1, -1, 0, 0, -1, 0, 0, 0, 1, -1, 0, -1, 0, 0, 1, 1, -1, 0, 1, 0, 1, 0, 1, 1, 0, -1, 0, 1, -1, 0, 0, 1, 1, -1, -1, 0, 1, 1, 0, -1},
//        {0, -1, 0, 1, 0, -1, 0, -1, 1, 1, 1, -1, -1, 0, 1, -1, 0, 0, 0, 0, 0, -1, 0, 1, 1, 1, 0, 0, 1, -1, -1, 0, 1, -1, -1, -1, 1, 0, 0, -1},
//        {1, 1, 0, 0, -1, 0, 1, 1, 0, 1, 1, -1, -1, 0, -1, 1, 1, -1, 1, 1, 1, 0, 1, 0, 1, 1, -1, 1, -1, 1, 1, 0, 0, 0, -1, -1, 1, 0, 1, 1},
//        {-1, -1, 1, 0, -1, -1, -1, -1, 0, 0, 1, -1, 0, 0, 1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 1, 0, 0, 0, 1, 1, 0, -1, 1, 1, 1, 1, -1, -1, 1, -1},
//        {1, 1, 1, -1, 1, -1, -1, -1, 0, 0, 1, -1, -1, 0, 0, -1, 0, 1, -1, 0, -1, 0, 1, 1, 1, -1, 0, -1, -1, -1, 0, -1, 1, 1, 0, 0, -1, -1, -1, 1},
//        {-1, 0, 1, 0, 0, 0, 0, -1, 1, 1, 0, 1, -1, -1, 1, 1, -1, -1, -1, 0, -1, -1, -1, 1, 0, 1, 1, -1, 1, 1, 0, 1, -1, 0, 0, 1, 1, -1, -1, -1},
//        {0, 0, -1, 1, 0, 1, 0, 0, 0, 0, -1, -1, 1, 1, 0, 0, 1, 0, 1, 1, -1, 0, -1, 0, 1, 1, 1, 1, -1, 1, 0, 1, 1, -1, -1, 1, -1, 1, -1, -1},
//        };
//        pathCreate = new double[][]{
//        {0, 0, 720.517, 192.1, 0, 0, 0, 0, 0, 471.857, 478.341, 0, 921.272, 743.788, 0, 0, 0, 0, 0, 924.896, 0, 0, 333.408, 0, 0, 0, 424.181, 0, 328.307, 0, 0, 242.402, 0, 0, 480.583, 0, 0, 0, 0, 441.933},
//        {0, 0, 0, 0, 0, 0, 126.527, 584.026, 333.356, 0, 806.262, 0, 0, 0, 0, 413.574, 293.479, 653.86, 0, 764.95, 194.14, 228.693, 374.066, 196.85, 0, 0, 0, 873.997, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 537.876, 318.304},
//        {215.418, 0, 0, 800.972, 0, 0, 132.737, 0, 0, 0, 0, 0, 0, 736.727, 0, 0, 439.635, 0, 0, 0, 830.287, 0, 0, 0, 0, 0, 161.233, 722.035, 0, 0, 0, 983.223, 0, 946.369, 252.786, 558.972, 0, 0, 0, 0},
//        {588.963, 0, 146.603, 0, 0, 623.783, 0, 0, 0, 0, 0, 212.852, 0, 0, 0, 0, 0, 562.74, 212.861, 0, 0, 0, 0, 0, 967.877, 158.147, 0, 0, 467.073, 162.185, 877.779, 0, 194.205, 215.122, 0, 961.56, 840.796, 0, 566.632, 0},
//        {0, 0, 0, 0, 0, 513.323, 878.631, 0, 0, 653.871, 658.76, 0, 0, 0, 0, 0, 0, 499.092, 0, 0, 632.311, 0, 715.245, 0, 0, 0, 0, 980.179, 168.176, 0, 444.481, 0, 0, 0, 162.942, 0, 0, 0, 909.002, 276.591},
//        {0, 0, 0, 191.88, 886.959, 0, 0, 0, 0, 626.891, 0, 333.68, 0, 0, 0, 0, 498.675, 0, 0, 0, 0, 0, 0, 0, 0, 256.433, 383.157, 0, 0, 113.947, 0, 0, 512.819, 738.044, 0, 177.917, 0, 0, 959.213, 0},
//        {0, 357.664, 554.893, 0, 745.057, 0, 0, 564.502, 0, 0, 0, 0, 570.931, 0, 0, 0, 0, 113.181, 0, 0, 712.699, 0, 0, 0, 0, 0, 0, 0, 0, 160.896, 0, 0, 0, 877.221, 392.062, 0, 0, 0, 173.138, 220.833},
//        {0, 183.087, 0, 0, 0, 0, 477.194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 636.737, 0, 0, 0, 0, 0, 611.484, 0, 0, 490.489, 0, 293.259, 505.601, 379.141, 0, 0, 0, 0, 0, 548.36},
//        {0, 704.635, 0, 0, 0, 0, 0, 0, 0, 170.566, 0, 336.907, 0, 169.037, 0, 0, 101.676, 164.283, 0, 0, 0, 0, 0, 0, 0, 0, 453.136, 628.603, 0, 204.499, 185.187, 0, 0, 0, 0, 941.044, 548.658, 616.042, 0, 772.487},
//        {623.532, 0, 0, 0, 433.561, 148.271, 0, 0, 599.847, 0, 0, 0, 0, 566.331, 763.071, 0, 410.339, 0, 298.677, 811.641, 449.967, 0, 0, 0, 772.946, 0, 422.456, 0, 671.462, 0, 0, 0, 0, 0, 0, 0, 169.285, 638.377, 0, 777.386},
//        {618.731, 689.375, 0, 0, 482.648, 0, 0, 0, 0, 0, 0, 0, 0, 929.31, 0, 0, 0, 0, 0, 0, 0, 874.855, 0, 471.59, 0, 805.363, 0, 0, 0, 0, 599.399, 0, 997.491, 515.292, 0, 0, 0, 0, 211.536, 0},
//        {0, 0, 0, 596.156, 0, 444.025, 0, 0, 302.437, 0, 0, 0, 828.327, 0, 408.878, 0, 304.177, 553.511, 0, 736.526, 0, 0, 0, 0, 0, 0, 0, 0, 782.88, 0, 0, 0, 729.739, 0, 0, 0, 0, 0, 0, 0},
//        {387.185, 0, 0, 0, 0, 0, 903.391, 0, 0, 0, 0, 837.699, 0, 513.048, 0, 483.158, 428.061, 0, 746.53, 456.711, 0, 0, 562.158, 0, 0, 571.93, 678.556, 0, 190.628, 0, 0, 0, 0, 178.077, 0, 0, 224.446, 0, 0, 0},
//        {401.998, 0, 419.467, 0, 0, 0, 0, 0, 548.711, 640.237, 869.502, 0, 672.043, 0, 0, 0, 0, 0, 0, 0, 0, 0, 950.64, 0, 0, 318.203, 0, 0, 0, 0, 798.577, 0, 739.052, 962.893, 997.568, 628.432, 169.171, 876.853, 0, 0},
//        {0, 0, 0, 0, 0, 0, 0, 0, 0, 978.32, 0, 762.03, 0, 0, 0, 712.027, 0, 541.333, 0, 0, 407.626, 533.163, 0, 873.829, 0, 0, 0, 0, 750.535, 472.007, 518.305, 0, 737.609, 0, 0, 0, 0, 357.127, 0, 640.349},
//        {0, 678.218, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 385.612, 0, 277.811, 0, 0, 0, 227.269, 289.946, 568.482, 356.23, 214.294, 0, 688.864, 955.088, 929.017, 0, 602.525, 825.219, 0, 0, 444.42, 0, 0, 0, 453.984, 0, 0, 832.46},
//        {0, 596.992, 979.083, 0, 0, 884.616, 0, 0, 654.24, 974.68, 0, 469.132, 766.104, 0, 0, 0, 0, 0, 318.275, 776.871, 0, 0, 840.779, 0, 990.358, 0, 410.457, 0, 0, 0, 0, 0, 0, 0, 446.133, 0, 688.197, 809.972, 0, 0},
//        {0, 400.039, 0, 864.299, 924.656, 0, 360.68, 0, 636.205, 0, 0, 853.548, 0, 0, 358.185, 0, 0, 0, 655.032, 255.466, 0, 0, 0, 0, 0, 0, 0, 324.225, 656.019, 0, 0, 0, 842.93, 541.58, 437.035, 0, 0, 0, 0, 913.151},
//        {0, 0, 0, 237.716, 0, 0, 0, 0, 0, 839.412, 0, 0, 525.307, 0, 0, 358.703, 111.62, 376.659, 0, 322.654, 0, 0, 0, 375.944, 0, 0, 0, 0, 0, 0, 0, 137.162, 0, 0, 934.395, 0, 224.627, 0, 0, 0},
//        {314.556, 323.044, 0, 0, 0, 0, 0, 0, 0, 348.378, 0, 265.697, 101.127, 0, 0, 615.211, 726.279, 609.588, 519.833, 0, 678.633, 0, 0, 0, 0, 327.726, 763.776, 558.362, 0, 634.313, 0, 0, 0, 119.785, 252.37, 0, 791.85, 384.139, 490.685, 0},
//        {0, 725.527, 608.425, 0, 821.772, 0, 934.665, 826.367, 0, 544.828, 0, 0, 0, 0, 176.412, 479.193, 0, 0, 0, 996.793, 0, 0, 719.19, 0, 0, 0, 0, 337.879, 180.627, 265.631, 0, 0, 0, 0, 239.765, 0, 0, 0, 0, 0},
//        {0, 895.247, 0, 0, 0, 0, 0, 0, 0, 0, 113.143, 0, 0, 0, 889.338, 333.064, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 634.963, 0, 0, 0, 0, 0, 0, 619.861, 0, 495.695, 309.12, 579.23, 0, 302.304},
//        {449.476, 122.775, 0, 0, 107.16, 0, 0, 0, 0, 0, 0, 0, 783.885, 908.401, 0, 406.261, 284.548, 0, 0, 0, 136.36, 0, 0, 871.97, 0, 0, 0, 0, 0, 0, 0, 325.809, 0, 0, 442.567, 0, 875.77, 0, 0, 0},
//        {0, 271.4, 0, 0, 0, 0, 0, 0, 0, 0, 541.997, 0, 0, 0, 928.465, 0, 0, 0, 559.082, 0, 0, 0, 151.162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 945.52, 0, 0, 0, 587.092},
//        {0, 0, 0, 880.117, 0, 0, 0, 0, 0, 165.092, 0, 0, 0, 0, 0, 649.241, 296.142, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154.903, 0, 0, 0, 0, 0, 0, 516.225, 0, 0, 0, 0, 721.675, 0},
//        {0, 0, 0, 240.767, 0, 278.062, 0, 0, 0, 0, 556.584, 0, 210.449, 865.869, 0, 318.783, 0, 0, 0, 384.599, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 534.907, 0, 0, 0, 0, 0, 518.603, 0, 0, 0},
//        {862.144, 0, 186.275, 0, 0, 765.212, 0, 309.469, 817.755, 823.528, 0, 0, 823.435, 0, 0, 140.836, 906.61, 0, 0, 582.674, 0, 157.671, 0, 0, 529.528, 0, 0, 0, 882.671, 541.871, 0, 0, 0, 551.729, 573.263, 0, 162.384, 436.493, 0, 0},
//        {0, 156.884, 528.351, 0, 210.088, 0, 0, 0, 218.278, 0, 0, 0, 0, 0, 0, 0, 0, 526.12, 0, 723.283, 195.76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 953.469, 0, 591.777, 0, 0, 0},
//        {963.732, 0, 0, 916.341, 848.315, 0, 0, 0, 0, 726.512, 0, 836.066, 650.833, 0, 713.59, 852.863, 0, 654.836, 0, 0, 583., 0, 0, 0, 0, 0, 987.471, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
//        {0, 0, 0, 904.294, 0, 449.562, 656.336, 203.558, 290.119, 0, 0, 0, 0, 0, 127.095, 514.986, 0, 0, 0, 911.045, 598.653, 0, 0, 0, 0, 0, 237.827, 0, 0, 0, 0, 404.388, 549.611, 656.077, 0, 0, 0, 0, 0, 0},
//        {0, 0, 0, 373.343, 637.266, 0, 0, 0, 424.074, 0, 774.594, 0, 0, 467.063, 531.481, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 309.295, 0, 0, 0, 0, 0, 0, 0, 683.545, 0, 0, 946.904, 682.414, 320.237, 182.235},
//        {196.046, 0, 688.206, 0, 0, 0, 0, 699.616, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 919.104, 0, 0, 0, 220.254, 0, 0, 0, 0, 0, 0, 366.651, 0, 0, 0, 0, 292.851, 453.26, 0, 0, 0, 0},
//        {0, 0, 0, 702.369, 0, 358.043, 0, 234.004, 0, 0, 999.996, 202.89, 0, 231.538, 124.231, 556.534, 0, 326.998, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 266.925, 0, 0, 0, 0, 0, 516.375, 0, 0, 0, 0},
//        {0, 0, 260.895, 624.468, 0, 537.068, 569.429, 608.867, 0, 0, 285.04, 0, 699.524, 940.185, 0, 0, 0, 316.616, 0, 737.218, 0, 109.123, 0, 0, 236.133, 0, 931.776, 0, 0, 510.678, 793.082, 0, 0, 0, 0, 264.368, 0, 0, 616.617, 0},
//        {721.447, 0, 111.945, 0, 219.191, 0, 349.321, 0, 0, 0, 0, 0, 0, 122.777, 0, 0, 421.258, 790.328, 573.567, 793.194, 598.237, 0, 753.246, 0, 0, 0, 874.515, 935.741, 0, 0, 0, 135.306, 0, 0, 0, 0, 0, 915.586, 750.945, 0},
//        {0, 0, 267.876, 595.185, 0, 346.982, 0, 0, 477.508, 0, 0, 0, 0, 654.408, 0, 0, 0, 0, 0, 0, 0, 434.416, 0, 214.456, 0, 0, 0, 0, 0, 0, 0, 461.56, 808.563, 493.477, 0, 0, 0, 996.608, 0, 0},
//        {0, 0, 0, 261.164, 0, 0, 0, 0, 692.376, 675.234, 0, 0, 577.243, 676.303, 0, 756.235, 262.47, 0, 985.503, 408.708, 0, 792.001, 228.432, 0, 0, 561.676, 913.808, 991.89, 0, 0, 727.11, 0, 0, 0, 0, 0, 0, 0, 0, 0},
//        {0, 0, 0, 0, 0, 0, 0, 0, 773.618, 173.541, 0, 0, 0, 948.114, 782.196, 0, 284.967, 0, 0, 429.378, 0, 476.289, 0, 0, 0, 0, 799.276, 0, 0, 0, 538.378, 0, 0, 0, 975.233, 531.58, 0, 0, 0, 0},
//        {0, 835.423, 0, 940.103, 455.213, 522.824, 330.098, 0, 0, 0, 421.857, 0, 0, 0, 0, 0, 0, 0, 0, 586.461, 0, 0, 0, 0, 162.233, 0, 0, 0, 0, 0, 354.166, 0, 0, 810.753, 878.98, 0, 0, 0, 0, 0},
//        {524.477, 412.292, 0, 0, 547.943, 0, 716.112, 520.937, 114.531, 566.175, 0, 0, 0, 0, 774.796, 117.31, 0, 131.705, 0, 0, 0, 784.334, 0, 335.737, 0, 0, 0, 0, 0, 0, 735.969, 0, 0, 0, 0, 0, 0, 0, 0, 0},
//        };
//        pathCost = new double[][]{
//        {0, 0, 27.6789, 48.6112, 0, 39.0473, 46.5029, 25.7019, 0, 27.8802, 28.5169, 9.14437, 46.9024, 49.9611, 0, 41.3631, 24.4626, 47.7084, 0, 19.5439, 42.4305, 7.55311, 43.9848, 0, 8.72165, 18.595, 36.8247, 0, 17.9052, 5.53784, 22.8497, 17.7833, 0, 30.1328, 36.0527, 20.7632, 0, 15.0636, 0, 25.4588},
//        {0, 0, 0, 0, 0, 0, 38.3476, 25.1268, 20.3323, 32.1192, 42.8399, 28.2607, 48.1438, 3.98618, 4.09934, 19.5158, 22.0789, 42.546, 2.21399, 25.803, 6.09287, 49.6458, 48.2194, 17.5244, 0, 13.7468, 34.4414, 39.9864, 48.1418, 16.84, 0, 0, 0, 0, 0, 23.863, 0, 43.8934, 3.87276, 4.25106},
//        {48.5734, 0, 0, 12.3979, 41.853, 46.3476, 13.0994, 0, 45.0785, 0, 43.9721, 0, 19.6169, 17.2398, 15.8367, 46.6427, 24.432, 23.7202, 18.6378, 0, 29.8888, 0, 0, 0, 31.1585, 33.0896, 38.2883, 8.72592, 27.6828, 9.06726, 0, 13.4125, 24.2095, 5.74385, 6.16132, 27.3456, 32.1448, 3.6697, 13.5089, 0},
//        {41.372, 0, 32.6861, 0, 2.04623, 9.61227, 36.4542, 0, 0, 0, 0, 45.1401, 48.0051, 0, 0, 0, 0, 44.0294, 31.3564, 13.7053, 45.7306, 0, 4.96866, 0, 45.1579, 17.2214, 0, 10.9907, 46.6337, 17.4201, 12.4376, 0, 47.9131, 33.0585, 4.93333, 15.8708, 30.036, 0, 35.9076, 37.7731},
//        {0, 0, 25.0427, 42.342, 0, 35.5253, 42.355, 0, 0, 38.0267, 29.8518, 47.7608, 45.616, 0, 0, 0, 0, 7.8072, 19.1642, 0, 12.946, 0, 33.2153, 25.1431, 0, 33.9478, 0, 4.54154, 32.6785, 25.577, 17.7787, 20.2268, 0, 0, 39.5895, 0, 0, 23.4064, 46.3391, 16.5411},
//        {33.4011, 0, 30.4022, 37.0946, 15.9279, 0, 0, 41.1072, 48.1534, 10.9188, 20.1754, 15.7542, 26.2918, 0, 15.4782, 40.5906, 16.7918, 0, 0, 32.7383, 0, 31.0336, 12.0662, 0, 0, 26.2655, 35.2071, 43.4168, 0, 2.21148, 0, 41.5001, 48.1479, 8.07098, 0, 4.98211, 0, 0, 39.3082, 20.709},
//        {2.63545, 28.1729, 47.5287, 15.6651, 13.444, 0, 0, 37.9661, 0, 0, 0, 33.0493, 17.3836, 0, 0, 25.2948, 36.9644, 32.0489, 0, 0, 28.4756, 16.3978, 0, 0, 0, 0, 19.318, 0, 8.42544, 11.6962, 48.1219, 20.5821, 45.3138, 48.1902, 39.742, 16.0556, 0, 0, 4.47376, 29.1793},
//        {24.7737, 15.2945, 0, 0, 0, 43.9051, 31.6024, 0, 0, 45.504, 2.26535, 45.1151, 14.5153, 38.3713, 0, 0, 0, 0, 0, 31.8408, 13.06, 31.1391, 38.3327, 32.7247, 0, 0, 32.9757, 4.90159, 16.8095, 2.34615, 17.377, 13.7844, 17.6764, 5.12805, 0, 9.33535, 0, 0, 0, 18.8255},
//        {0, 36.6847, 19.3721, 0, 0, 36.7453, 0, 0, 0, 33.0758, 0, 45.5049, 0, 36.915, 6.57175, 0, 35.233, 45.9148, 0, 27.6976, 9.55919, 0, 22.2682, 0, 43.1357, 26.7011, 32.8983, 43.6908, 0, 10.3752, 46.2313, 0, 8.13992, 46.6742, 20.0921, 34.0751, 36.6944, 40.7746, 40.2231, 9.74651},
//        {28.7834, 30.207, 0, 0, 7.00053, 20.0721, 0, 45.7197, 14.5872, 0, 7.45017, 47.0256, 43.7449, 8.24153, 48.7516, 34.957, 43.7251, 0, 44.8563, 34.9862, 42.7582, 28.2562, 0, 0, 42.3211, 39.2845, 22.195, 23.9077, 39.6287, 0, 45.2268, 40.1403, 0, 0, 37.3924, 10.8603, 6.20418, 24.013, 23.4507, 21.3998},
//        {22.7705, 41.3508, 34.5698, 0, 32.7591, 19.0832, 0, 31.5379, 0, 2.4608, 0, 39.9852, 18.3535, 47.1615, 0, 15.0039, 31.1049, 0, 11.3381, 0, 13.0258, 31.2166, 5.24485, 30.5397, 31.4261, 40.4104, 18.0852, 0, 0, 39.1385, 4.43015, 16.6066, 18.489, 34.9966, 7.482, 17.8992, 48.8536, 4.64138, 5.21053, 0},
//        {35.4454, 11.0249, 0, 39.8057, 26.5492, 33.5158, 20.4888, 31.7982, 20.4605, 31.0132, 46.75, 0, 12.1938, 0, 24.832, 23.3131, 48.306, 20.5481, 0, 25.6268, 35.309, 20.7598, 15.1776, 4.04944, 0, 30.1783, 31.9793, 45.0285, 11.413, 25.0031, 37.8505, 0, 35.1225, 0, 0, 0, 0, 0, 24.4024, 0},
//        {49.6917, 25.3115, 27.5144, 17.8329, 16.031, 38.3432, 34.4023, 45.8672, 0, 32.9036, 49.1795, 2.88665, 0, 17.9782, 25.1778, 5.21886, 36.6934, 0, 8.02301, 15.4798, 0, 7.67787, 29.1998, 43.9989, 36.5445, 13.4854, 44.0618, 0, 7.6303, 43.3494, 0, 39.1102, 39.4479, 43.5173, 0, 0, 37.3329, 0, 0, 3.13345},
//        {40.4217, 28.8371, 31.9428, 0, 0, 0, 0, 18.2865, 23.7734, 19.7161, 14.5058, 0, 11.6146, 0, 36.3234, 12.2488, 19.8256, 0, 44.6767, 0, 0, 0, 36.8103, 26.102, 0, 18.353, 6.14695, 0, 0, 36.3297, 8.56989, 3.56483, 35.3964, 34.8869, 30.6153, 49.1825, 21.0608, 11.6343, 0, 28.79},
//        {0, 2.86786, 49.0556, 0, 0, 30.7134, 0, 0, 23.4268, 35.4887, 0, 44.5297, 36.7616, 31.8193, 0, 20.437, 0, 13.1098, 6.28267, 5.36731, 43.3797, 23.0072, 0, 33.6101, 0, 0, 24.8121, 15.7809, 48.3647, 47.5652, 8.69932, 12.5782, 14.8699, 36.1925, 43.164, 0, 13.4256, 39.4437, 47.4702, 41.0785},
//        {9.64787, 30.4983, 12.0211, 0, 0, 31.4489, 32.9199, 0, 0, 5.81339, 44.727, 10.6988, 28.0193, 24.0193, 36.991, 0, 41.1154, 17.6635, 22.8233, 11.2329, 35.3944, 44.9503, 28.4152, 0, 28.2011, 12.3796, 31.8284, 0, 7.61478, 30.3683, 9.31695, 0, 22.2054, 7.89352, 0, 47.9703, 28.1244, 0, 2.24239, 15.9225},
//        {27.4827, 21.2244, 19.3341, 0, 0, 40.8446, 13.7322, 0, 20.8385, 19.7008, 9.18024, 37.3992, 20.1352, 7.06183, 0, 48.5364, 0, 23.2797, 38.0673, 9.56848, 30.1289, 0, 46.261, 0, 25.6631, 0, 27.2529, 0, 0, 0, 3.82183, 18.0417, 32.5249, 0, 40.9453, 11.6054, 4.53412, 28.4496, 0, 4.82945},
//        {5.76128, 11.6644, 39.1149, 26.7942, 40.4198, 0, 49.3537, 0, 4.93914, 0, 0, 12.4541, 0, 0, 28.5971, 47.5357, 3.54335, 0, 15.8399, 16.3649, 0, 0, 8.59571, 0, 0, 10.3418, 0, 10.1217, 10.444, 0, 0, 0, 19.8953, 3.76789, 46.84, 0, 0, 20.9607, 0, 10.1486},
//        {0, 15.7098, 24.6369, 28.1461, 47.6778, 0, 0, 0, 0, 8.9376, 48.1994, 0, 13.4485, 29.6449, 27.8119, 47.464, 35.1095, 38.932, 0, 17.843, 0, 0, 40.6161, 25.5087, 0, 42.5786, 0, 0, 0, 0, 43.3958, 25.6306, 0, 15.7724, 26.3081, 48.3285, 27.3123, 0, 0, 47.9139},
//        {41.2518, 2.90788, 0, 49.8436, 0, 36.8684, 0, 18.3987, 38.0112, 49.0116, 0, 15.4258, 44.9505, 0, 15.0456, 45.6499, 32.0207, 48.0016, 48.4844, 0, 25.587, 48.783, 0, 5.05694, 0, 20.548, 25.5134, 9.43394, 0, 36.8848, 0, 3.2031, 41.6979, 30.2284, 10.9127, 49.5883, 4.57435, 20.0929, 28.2808, 14.2892},
//        {32.898, 46.7592, 12.8746, 29.23, 29.9658, 0, 30.3485, 38.9391, 12.3624, 5.57521, 31.5359, 22.5883, 0, 0, 17.2415, 9.76793, 40.9754, 0, 0, 14.3087, 0, 31.9881, 46.5923, 0, 0, 23.178, 19.6999, 41.1889, 20.5596, 43.0682, 21.859, 23.6577, 11.4398, 24.9586, 46.1134, 42.0468, 0, 0, 0, 0},
//        {24.2918, 27.8626, 0, 0, 0, 6.58684, 16.2932, 39.1225, 0, 33.0961, 13.3909, 24.0761, 44.0997, 0, 17.7618, 12.1786, 0, 0, 0, 22.3539, 7.23045, 0, 0, 34.3131, 0, 0, 8.87583, 0, 34.3412, 23.6435, 31.5237, 21.1161, 0, 18.6891, 0, 2.4976, 37.5939, 14.0727, 0, 34.1488},
//        {15.0361, 42.7188, 0, 44.6965, 16.0221, 12.0739, 0, 28.1979, 47.3671, 0, 11.3465, 21.1452, 47.4882, 33.9767, 0, 37.2356, 19.3288, 43.8408, 42.7539, 0, 39.1102, 0, 0, 12.3376, 5.40427, 17.1273, 0, 21.077, 37.9474, 0, 24.9143, 8.25927, 43.4731, 27.0046, 36.8073, 43.225, 12.4567, 43.4176, 0, 0},
//        {0, 4.35011, 0, 0, 27.7172, 0, 0, 30.0973, 0, 0, 31.9458, 42.9002, 10.6391, 45.7252, 9.07061, 0, 0, 0, 43.4267, 48.0049, 0, 30.7644, 18.8376, 0, 0, 40.1723, 0, 21.4073, 0, 33.2222, 0, 48.0748, 0, 43.4273, 16.1416, 9.8252, 0, 42.0853, 10.0999, 20.0597},
//        {15.2811, 0, 2.94694, 48.6015, 0, 0, 0, 0, 5.02147, 24.4535, 42.5118, 0, 31.9038, 0, 0, 6.21425, 31.4749, 0, 0, 0, 0, 0, 43.3818, 0, 0, 0, 11.6769, 0, 38.5915, 0, 0, 0, 22.4189, 44.4293, 22.9988, 28.8165, 4.39689, 39.1458, 47.8899, 40.8934},
//        {35.7785, 2.6123, 25.9406, 38.4233, 26.9663, 19.0811, 0, 0, 7.22112, 43.1893, 34.8521, 17.1792, 46.402, 49.8347, 0, 39.0974, 0, 3.97299, 25.8439, 41.5075, 3.41157, 0, 24.8135, 43.9839, 0, 0, 3.76085, 2.15802, 18.4101, 19.3276, 9.55611, 11.4704, 0, 0, 35.1073, 6.46928, 43.9373, 0, 21.8063, 15.6313},
//        {10.5632, 22.4695, 49.3466, 0, 0, 39.3139, 43.3245, 31.76, 11.5764, 16.179, 3.46193, 44.8402, 13.8706, 47.6672, 3.37192, 31.4284, 20.022, 0, 0, 9.3671, 27.0537, 11.6163, 0, 0, 8.7984, 47.899, 0, 0, 25.3167, 11.2854, 0, 0, 45.0123, 44.9604, 13.2633, 0, 6.66178, 4.76976, 33.2504, 19.9034},
//        {0, 19.9567, 16.9893, 45.148, 49.5882, 27.6939, 0, 32.6328, 34.5056, 20.5124, 0, 26.3296, 0, 0, 49.3732, 0, 0, 27.3026, 0, 10.4709, 2.01121, 0, 16.5552, 2.88996, 0, 12.0457, 0, 0, 7.4908, 0, 0, 0, 8.59579, 18.0441, 22.7563, 31.8301, 20.6099, 0, 0, 43.2491},
//        {42.6138, 49.9594, 44.7088, 4.98952, 27.0967, 0, 8.95693, 2.85798, 0, 9.77264, 0, 28.0794, 44.2057, 0, 21.2246, 35.6839, 0, 9.30669, 0, 0, 39.4927, 35.6243, 49.7223, 0, 20.866, 46.8451, 46.8138, 10.9154, 0, 0, 32.179, 27.2134, 0, 0, 7.64921, 0, 45.1183, 0, 46.8701, 0},
//        {36.4021, 17.6352, 49.5604, 34.5206, 37.7013, 17.0184, 38.1727, 27.0379, 14.7433, 0, 31.654, 40.562, 40.6094, 46.0033, 2.66469, 46.7252, 0, 0, 0, 25.2242, 36.2252, 43.2435, 0, 25.3005, 0, 25.3503, 6.98146, 0, 0, 0, 0, 35.9105, 4.27574, 36.1743, 0, 37.748, 9.89707, 0, 48.2022, 47.1353},
//        {15.4407, 0, 0, 27.6191, 26.8794, 0, 32.184, 18.969, 10.1723, 25.8079, 20.3048, 7.89444, 0, 2.87106, 26.8301, 6.16796, 32.6264, 0, 10.0267, 0, 12.4536, 43.6719, 17.4946, 0, 0, 46.269, 0, 0, 27.7663, 0, 0, 5.63803, 28.0412, 27.3155, 0, 33.4938, 11.7754, 30.6286, 11.9988, 36.4818},
//        {10.5197, 0, 16.4837, 0, 23.4445, 36.2695, 10.338, 3.3995, 0, 19.2283, 29.262, 0, 48.9283, 5.26339, 17.736, 0, 30.3558, 0, 44.0808, 44.1411, 7.77025, 29.466, 20.865, 23.9182, 0, 21.9277, 0, 0, 18.5679, 40.0901, 39.5829, 0, 0, 45.7508, 48.6804, 42.5917, 0, 0, 37.6175, 4.58899},
//        {0, 0, 33.1722, 46.6112, 0, 36.316, 11.1265, 30.9706, 17.3999, 0, 33.9587, 35.1758, 41.426, 22.7525, 20.8128, 10.143, 13.7416, 22.5047, 0, 33.9242, 15.7305, 0, 6.16482, 0, 32.5711, 0, 25.9249, 37.7244, 0, 41.4013, 36.9526, 0, 0, 27.2757, 39.6441, 47.6333, 34.6437, 13.7139, 0, 22.0604},
//        {6.92161, 0, 45.091, 5.6779, 0, 42.908, 9.91652, 43.6012, 21.3759, 0, 21.2572, 0, 49.65, 30.6346, 38.5084, 8.79762, 0, 10.3985, 42.5208, 4.70925, 47.798, 19.7624, 28.4286, 31.429, 4.07863, 0, 6.88201, 7.79336, 0, 49.0247, 31.3142, 16.0634, 12.4323, 0, 0, 40.0281, 46.9632, 16.5286, 35.29, 0},
//        {21.5174, 0, 19.7138, 40.0051, 49.6977, 0, 35.2188, 0, 33.7587, 20.7555, 44.1028, 0, 0, 31.0594, 10.2921, 0, 18.8346, 37.7074, 33.8388, 27.9823, 22.542, 0, 20.1535, 36.449, 43.9447, 31.9268, 32.7385, 5.91649, 26.7884, 0, 0, 6.61217, 9.60368, 0, 0, 0, 9.39865, 17.1999, 12.4362, 0},
//        {26.1255, 25.1577, 37.4392, 22.5162, 0, 14.2208, 11.7154, 7.15482, 16.7902, 34.0321, 9.52451, 0, 0, 12.5327, 0, 12.1119, 26.7292, 0, 36.0526, 27.3443, 26.4599, 28.6602, 11.3542, 8.48142, 33.9078, 34.6252, 0, 46.5638, 0, 28.5699, 34.6964, 13.5375, 47.2651, 36.2383, 0, 0, 12.3425, 14.8646, 42.0539, 6.84522},
//        {0, 0, 44.6962, 40.5374, 0, 0, 0, 0, 24.8274, 3.66763, 41.5613, 0, 32.858, 7.67081, 42.1449, 29.7716, 43.0698, 0, 30.9605, 26.3156, 0, 36.26, 43.8431, 0, 32.9535, 49.4571, 34.6506, 11.5828, 40.9242, 42.3277, 35.5689, 0, 25.1518, 15.8527, 36.7528, 35.2562, 0, 0, 43.7161, 0},
//        {36.2004, 39.3013, 8.49494, 0, 24.7632, 0, 0, 0, 16.2207, 36.3005, 5.70759, 0, 0, 11.3832, 20.4143, 0, 31.3838, 5.58804, 0, 36.6948, 0, 39.0425, 46.9067, 45.5276, 23.5319, 0, 21.4327, 0, 0, 0, 45.9988, 0, 39.3569, 30.8611, 17.4563, 18.4932, 0, 0, 0, 45.1774},
//        {0, 36.8086, 5.47991, 44.0126, 18.6871, 42.7034, 10.359, 0, 5.0707, 4.16601, 31.4917, 4.9685, 0, 0, 41.8957, 20.1625, 0, 0, 0, 48.0665, 0, 0, 0, 42.2135, 3.15662, 21.82, 14.7588, 0, 18.1321, 26.4265, 25.2187, 37.1733, 0, 25.0093, 32.2355, 15.8322, 26.9015, 0, 0, 0},
//        {47.0496, 15.6965, 0, 28.5537, 16.2617, 15.1233, 23.9941, 34.6406, 29.8158, 47.0806, 0, 0, 37.2067, 27.3631, 9.72692, 35.2433, 42.6225, 23.3739, 25.5769, 8.89908, 0, 40.7516, 0, 10.9256, 44.0458, 26.9968, 44.4006, 35.6767, 0, 32.7769, 6.23831, 10.438, 39.9167, 0, 0, 38.8823, 0, 33.6064, 0, 0},
//        };
//
//        X = new int[]{-48, 6, 39, 36, 36, 17, 32, 3, 22, 25, -48, 31, 27, 16, 6, -55, 17, 2, 1, 38, 25, 37, 30, 6, 10, 6, 18, 35, 12, 8, 29, 14, 5, 40, 24, 2, 8, 6, 28, 12};
//        start = 10;

        //HRABEC data
        //20 nodes
        nodeCount = 20;
        path = new int[][]{
        {-1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, -1, -1, -1},
        {1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, -1, -1, -1},
        {-1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1},
        {-1, 1, 1, -1, 1, 1, 1, -1, -1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, 1},
        {-1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1},
        {-1, -1, 1, 1, 1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1},
        {1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1},
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1},
        {-1, 1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1},
        {1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1},
        {-1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, 1},
        {1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {-1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, 1, -1, 1},
        {-1, 1, -1, 1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1},
        {1, -1, 1, 1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1, 1, 1},
        {-1, -1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, -1},
        {-1, 1, -1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1},
        {-1, -1, 1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 1, 1},
        {-1, -1, -1, 1, -1, 1, 1, 1, -1, -1, -1, -1, -1, 1, 1, -1, 1, 1, -1, -1},
        {-1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1},
        };
        pathCreate = new double[][]{
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        };
        pathCost = new double[][]{
        {0., 7.79795, 0., 0., 0., 0., 11.0742, 0., 0., 5.90089, 0., 3.35335, 0., 0., 17.5896, 0., 0., 0., 0., 0.},
        {7.79795, 0., 0., 11.7714, 0., 0., 9.60583, 0., 19.3132, 0., 0., 5.0603, 0., 29.0799, 0., 0., 24.7506, 0., 0., 0.},
        {0., 0., 0., 9.43539, 16.5082, 18.4677, 0., 0., 0., 0., 0., 0., 0., 0., 6.90107, 0., 0., 15.6466, 0., 0.},
        {0., 11.7714, 9.43539, 0., 17.8316, 20.2026, 2.7945, 0., 0., 0., 20.4695, 0., 0., 22.179, 4.48402, 6.74983, 0., 14.0993, 4.01969, 19.893},
        {0., 0., 16.5082, 17.8316, 0., 2.37984, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 4.506, 5.42305, 0., 8.422},
        {0., 0., 18.4677, 20.2026, 2.37984, 0., 0., 0., 0., 0., 0.327185, 0., 0., 17.2695, 0., 13.4927, 0., 7.50561, 22.024, 8.90829},
        {11.0742, 9.60583, 0., 2.7945, 0., 0., 0., 0., 10.0355, 0., 0., 0., 0., 0., 0., 0., 0., 16.8925, 4.68551, 0.},
        {0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.70347, 0., 0., 0., 0., 19.0744, 0.},
        {0., 19.3132, 0., 0., 0., 0., 10.0355, 0., 0., 18.1834, 0., 0., 11.5863, 0., 3.16131, 2.59089, 6.83594, 0., 0., 14.9727},
        {5.90089, 0., 0., 0., 0., 0., 0., 0., 18.1834, 0., 0., 0., 0., 0., 0., 0., 0., 26.251, 0., 0.},
        {0., 0., 0., 20.4695, 0., 0.327185, 0., 0., 0., 0., 0., 0., 7.13717, 0., 0., 13.7681, 0., 7.83059, 0., 9.16272},
        {3.35335, 5.0603, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.},
        {0., 0., 0., 0., 0., 0., 0., 0., 11.5863, 0., 7.13717, 0., 0., 0., 0., 10.6569, 0., 3.17877, 0., 3.56097},
        {0., 29.0799, 0., 22.179, 0., 17.2695, 0., 1.70347, 0., 0., 0., 0., 0., 0., 21.0916, 17.8186, 0., 12.8773, 20.7444, 8.38863},
        {17.5896, 0., 6.90107, 4.48402, 0., 0., 0., 0., 3.16131, 0., 0., 0., 0., 21.0916, 0., 0., 9.69717, 10.8789, 7.8419, 17.2257},
        {0., 0., 0., 6.74983, 0., 13.4927, 0., 0., 2.59089, 0., 13.7681, 0., 10.6569, 17.8186, 0., 0., 6.71656, 0., 0., 0.},
        {0., 24.7506, 0., 0., 4.506, 0., 0., 0., 6.83594, 0., 0., 0., 0., 0., 9.69717, 6.71656, 0., 2.51271, 15.1506, 8.75167},
        {0., 0., 15.6466, 14.0993, 5.42305, 7.50561, 16.8925, 0., 0., 26.251, 7.83059, 0., 3.17877, 12.8773, 10.8789, 0., 2.51271, 0., 15.131, 6.59381},
        {0., 0., 0., 4.01969, 0., 22.024, 4.68551, 19.0744, 0., 0., 0., 0., 0., 20.7444, 7.8419, 0., 15.1506, 15.131, 0., 0.},
        {0., 0., 0., 19.893, 8.422, 8.90829, 0., 0., 14.9727, 0., 9.16272, 0., 3.56097, 8.38863, 17.2257, 0., 8.75167, 6.59381, 0., 0.},
        };

        X = new int[]{20, -150, 14, 10, 14, 14, 14, 11, 18, 18, 10, 15, 13, 19, 10, -125, 17, 20, 19, 19};
        start = 1;



        double profit = 0;
        List<Integer> reachable_nodes = new ArrayList<>();
        int next_node, amount, cur_node = start, min_wanted, possible_amount_add;
        this.node_path = new ArrayList<>();
        this.built_path = new ArrayList<>();
        
        amount = X[start];
        X[start] = 0;
        this.node_path.add(start);
        
        for(int i=0; i<vector.length; i++){
           
            min_wanted = this.getMinimumWanted();
            possible_amount_add = this.getPossibleAmountAdd();
            
            if(min_wanted == 0){
                return profit;
            }
            
            if(Math.abs(amount + possible_amount_add) < min_wanted){
                return profit;
            }
            
            next_node = (int) Math.round(vector[i]);
            reachable_nodes = this.getReachableNodes(cur_node);
            next_node = reachable_nodes.get(next_node % reachable_nodes.size());
            
            //path creation
            this.node_path.add(next_node);
            
            //create path
            if(this.pathCreate[cur_node][next_node] > 0){
                profit += this.pathCreate[cur_node][next_node];
                this.pathCreate[cur_node][next_node] = 0;
                this.built_path.add(new Integer[]{cur_node, next_node});
            }
            
            //path cost
            profit += this.pathCost[cur_node][next_node];
            
            //amount change
            if(amount + this.X[next_node] <= 0 ){
                if(amount <= (amount + this.X[next_node])) {
                    //sell case
                    amount += this.X[next_node];
                    profit -= (this.X[next_node] * this.cost);
                    this.X[next_node] = 0;
                    
                }
                else {
                    //load case
                    amount += this.X[next_node];
                    profit += (this.X[next_node] * this.load_cost);
                    this.X[next_node] = 0;
                }
            }
           
            cur_node = next_node;
           
        }
        
        return profit;
        
    }
    
    private List<Integer> getReachableNodes(int curNode){
        
        List<Integer> list = new ArrayList<>();
        
        for(int i=0;i<nodeCount;i++){
            
            if(path[curNode][i] > -1){
                list.add(i);
            }
            
        }
        
        return list;
        
    }
    
    private int getPossibleAmountAdd(){
        
        int ret = 0;
        
        for(int i=0; i<X.length; i++){
        
            if(X[i] < ret){
                ret = X[i];
            }
            
        }
        
        return ret;
        
    }
    
    private int getMinimumWanted(){
        
        int ret = Integer.MAX_VALUE;
        boolean empty = true;
        
        for(int i=0; i<X.length; i++){
            
            if(X[i] > 0 && X[i] < ret){
                ret = X[i];
                empty = false;
            }
            
        }
        
        return empty ? 0 : ret;
    }

    @Override
    public void constrain(Individual individual) {
        IndividualUtil.clipInBounds(individual, 0, nodeCount);
    }

    @Override
    public double[] generateTrial(int dim) {
        double[] vector = new double[dim];
        Random rnd = new UniformRandom();
        for (int i = 0; i < dim; i++) vector[i] = rnd.nextDouble(0, nodeCount);
        return vector;
    }

    @Override
    public double fixedAccLevel() {
        return 10E-7;
    }

    @Override
    public double optimum() {
        return Double.MIN_VALUE;
    }

    @Override
    public double max(int dim) {
        return nodeCount;
    }

    @Override
    public double min(int dim) {
        return 0;
    }

    @Override
    public String name() {
        return "Network";
    }

    public int getNodeCount() {
        return nodeCount;
    }

    public void setNodeCount(int nodeCount) {
        this.nodeCount = nodeCount;
    }

    public int[][] getPath() {
        return path;
    }

    public void setPath(int[][] path) {
        this.path = path;
    }

    public double[][] getPathCreate() {
        return pathCreate;
    }

    public void setPathCreate(double[][] pathCreate) {
        this.pathCreate = pathCreate;
    }

    public double[][] getPathCost() {
        return pathCost;
    }

    public void setPathCost(double[][] pathCost) {
        this.pathCost = pathCost;
    }

    public int[] getX() {
        return X;
    }

    public void setX(int[] X) {
        this.X = X;
    }

    public int getStart() {
        return start;
    }

    public void setStart(int start) {
        this.start = start;
    }

    public double getCost() {
        return cost;
    }

    public void setCost(double cost) {
        this.cost = cost;
    }

    public double getLoad_cost() {
        return load_cost;
    }

    public void setLoad_cost(double load_cost) {
        this.load_cost = load_cost;
    }

    public List<Integer> getNode_path() {
        return node_path;
    }

    public void setNode_path(List<Integer> node_path) {
        this.node_path = node_path;
    }

    public List<Integer[]> getBuilt_path() {
        return built_path;
    }

    public void setBuilt_path(List<Integer[]> built_path) {
        this.built_path = built_path;
    }
    
    public static void main(String[] args) throws Exception {
    
        double[] vector = new double[]{15.49306463073848, 12.255331378829208, 6.545714809245419, 11.291510091739896, 16.847609677972667, 3.453637956295934, 3.611302426342884, 10.207357571951128, 8.391493526645487, 18.7795772019138};
        TestFunction tf = new Network();
        
        System.out.println(tf.fitness(vector));
        System.out.println(((Network)tf).getNode_path().toString());
        
    }
}
